#!/usr/bin/env node

var path = require('path'), 
    fs = require('fs'), 
    querystring = require('querystring'), 
    util = require('util');

fs.realpath(__filename, function(error, script) {
  var servedir, root, port;
  if (error) throw error;

  var Inliner = require(path.join(path.dirname(script), '../inliner')),
      program = require('commander');

  program
    .version(Inliner.version)
    .usage('[options] http://yoursite.com')
    .option('-v, --verbose', 'echo on STDERR the progress of inlining')
    .option('-n, --nocompress', "don't compress CSS or HTML - useful for debugging")
    .option('-i, --images', "don't encode images - keeps files size small, but more requests")
    //.option('-s, --share', "create jsbin.com url for HTML page")
    //.option('-h, --help', "help - you're looking at it");

  program.on('--help', function () {
    console.log('  Examples:');
    console.log('');
    console.log('    $ inliner -v http://twitter.com > twitter.html');
    console.log('    $ inliner -ni http://twitter.com > twitter.html');
    console.log('');
    console.log('  For more details see http://github.com/remy/inliner/');
    console.log('');
  });

  program.parse(process.argv);

  var options = Inliner.defaults(),
      verbose = false,
      share = false;

  if (program.nocompress) {
    options.compressCSS = false;
    options.collapseWhitespace = false;
  }

  if (program.share) {
    share = true;

    // because JS Bin is a damn sight easier to debug when it's not all on one line
    options.compressCSS = false;
    options.collapseWhitespace = false;
  }

  options.images = !program.images;
  verbose = program.verbose;

  if (program.args.length == 0) {
    // ripped out of commander.js - should really be process.usage()
    process.stdout.write(program.helpInformation());
    program.emit('--help');
    process.exit(0);
  }

  var url = program.args[0];

  if (path.existsSync(url)) {
    // then it's a file
  } else if (url.indexOf('http') !== 0) {
    url = 'http://' + url;
  }

  var inliner = new Inliner(url, options, function (html) {
    if (share) {
      // post to jsbin
      var data = querystring.stringify({
        html: html,
        javascript: '',
        format: 'plain',
        method: 'save'
      });
      
      // note: when making a POST request using node, for PHP to pick it up, the content-type is crutial - I never knew that :(
      var request = Inliner.makeRequest('http://jsbin.com/save', { 
        method: 'POST', 
        headers: { 'content-type': 'application/x-www-form-urlencoded', 'content-length': data.length, 'X-Requested-With' : 'XMLHttpRequest' } 
      });
      request.on('response', function (res) {
        var body = '';
        res.on('data', function (chunk) {
          body += chunk;
        });
        res.on('end', function () {
          util.print(body);
        });
      });
      request.write(data);
      request.end();
    } else {
      // using util.print because console.log evalutes sprintf commands - which we don't want to do
      util.print(html);
    }
  });

  if (verbose) {
    inliner.on('progress', function (event) {
      console.error(event);
    });
  }
});
